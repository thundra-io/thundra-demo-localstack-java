service: thundra-demo-localstack

custom:
  stage: local
  region: us-east-1
  accountId: '000000000000'
  deploymentBucketName: ${self:service}-deployment-bucket-${self:custom.stage}
  tableName: ${self:service}-app-requests-${self:custom.stage}
  bucketName: ${self:service}-archive-bucket-${self:custom.stage}
  queueName: ${self:service}-request-queue-${self:custom.stage}
  topicName: ${self:service}-request-topic-${self:custom.stage}
  localstack:
    stages:
      # list of stages for which the plugin should be enabled
      - local
    stages: [ local ]
    debug: true
    autostart: true

plugins:
  - serverless-deployment-bucket
  - serverless-localstack # only activated when stage is "local"

package:
  artifact: ./target/thundra-demo-localstack.jar

provider:
  name: aws
  runtime: java8
  stage: ${self:custom.stage}
  region: ${self:custom.region}
  memorySize: 512
  timeout: 60
  stage: ${opt:stage, "local"}
  region: ${opt:region, "us-east-1"}
  memorySize: ${opt:memory, 512}
  timeout: ${opt:timeout, 60}
  deploymentBucket:
    name: ${self:custom.deploymentBucketName}
  environment:
    TABLE_NAME: ${self:custom.tableName}
    QUEUE_URL: http://172.17.0.2:4566/${self:custom.accountId}/${self:custom.queueName}
    S3_BUCKET: ${self:custom.bucketName}
    SNS_ARN: arn:aws:sns:${self:custom.region}:${self:custom.accountId}:${self:custom.topicName}

    name: thundra-demo-localstack-bucket
  environment:
    REQUEST_QUEUE_URL:
      Ref: requestQueue
    REQUEST_TOPIC_ARN:
      Ref: requestTopic
    ARCHIVE_BUCKET_NAME: archivebucket
    #THUNDRA_APIKEY: <YOUR-THUNDRA-API-KEY-HERE>

functions:
  http_handleRequest:
    handler: io.thundra.demo.localstack.handler.App
    events:
      - http:
          path: /requests
          method: post
      - http:
          path: /requests
          method: get
  backend_processRequest:
    handler: io.thundra.demo.localstack.handler.Processing
    events:
      - sqs:
          arn:
            Fn::GetAtt: [ requestQueue, Arn ]
  backend_archiveResult:
    handler: io.thundra.demo.localstack.handler.Archive
    events:
      - sns: ${self:custom.topicName}
      - sns:
          arn:
            Fn::GetAtt: [ requestTopic, Arn ]
          topicName: requestTopic

resources:
  Resources:
    appDatabase:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.tableName}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: requestId
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
          - AttributeName: requestId
            KeyType: RANGE
    archiveBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.bucketName}
    requestQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:custom.queueName}
        QueueName: requestQueue
    requestTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: requestTopic
